# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Core.MPC_pb2 as MPC__pb2


class MPCServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetServerSpec = channel.unary_unary(
        '/MPCServer/SetServerSpec',
        request_serializer=MPC__pb2.ServerSpec.SerializeToString,
        response_deserializer=MPC__pb2.Status.FromString,
        )
    self.GetTensor = channel.unary_unary(
        '/MPCServer/GetTensor',
        request_serializer=MPC__pb2.TensorSpec.SerializeToString,
        response_deserializer=MPC__pb2.Tensor.FromString,
        )
    self.DeleteTensor = channel.unary_unary(
        '/MPCServer/DeleteTensor',
        request_serializer=MPC__pb2.TensorSpec.SerializeToString,
        response_deserializer=MPC__pb2.Status.FromString,
        )
    self.Compute = channel.unary_unary(
        '/MPCServer/Compute',
        request_serializer=MPC__pb2.Computation.SerializeToString,
        response_deserializer=MPC__pb2.TensorSpec.FromString,
        )


class MPCServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetServerSpec(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteTensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MPCServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetServerSpec': grpc.unary_unary_rpc_method_handler(
          servicer.SetServerSpec,
          request_deserializer=MPC__pb2.ServerSpec.FromString,
          response_serializer=MPC__pb2.Status.SerializeToString,
      ),
      'GetTensor': grpc.unary_unary_rpc_method_handler(
          servicer.GetTensor,
          request_deserializer=MPC__pb2.TensorSpec.FromString,
          response_serializer=MPC__pb2.Tensor.SerializeToString,
      ),
      'DeleteTensor': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteTensor,
          request_deserializer=MPC__pb2.TensorSpec.FromString,
          response_serializer=MPC__pb2.Status.SerializeToString,
      ),
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=MPC__pb2.Computation.FromString,
          response_serializer=MPC__pb2.TensorSpec.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MPCServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
